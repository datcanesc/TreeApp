services:
  db:
    image: postgres
    container_name: tree-app-postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_PORT}:${DOCKER_POSTGRES_PORT}"

  backend:
    build:
      context: ./backend  
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: tree-app-backend
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${DOCKER_POSTGRES_PORT}/${POSTGRES_DATABASE}
    ports:
      - "${BACKEND_HOST}:5000"
    depends_on:
      - db

  frontend:
    container_name: tree-app-frontend
    env_file:
      - .env
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_HOST}:3000"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    stdin_open: true
    tty: true
    environment:
      - NODE_ENV=development
    command: npm start
    depends_on:
      - backend

volumes:
  pgdata:
